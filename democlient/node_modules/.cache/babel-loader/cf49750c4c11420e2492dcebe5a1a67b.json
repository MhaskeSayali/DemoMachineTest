{"ast":null,"code":"var _jsxFileName = \"C:\\\\Test\\\\clone 2\\\\DemoMachineTest\\\\democlient\\\\src\\\\Component\\\\JS\\\\AddCategory.js\";\nimport React, { Component } from 'react';\nimport '../CSS/AddCategory.css';\nimport axios from 'axios';\nimport { getAPIHostURL } from '../../ClientConfig';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport 'react-table/react-table.css';\nimport '../CSS/ProductPage.css';\nimport ReactTable from 'react-table';\nimport { FaEdit, FaTrash } from 'react-icons/fa';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass AddCategory extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeCategoryDiscription = e => {\n      let modifiedState = this.state;\n      modifiedState.errors.others = \"\";\n      modifiedState.successfulAddedCategaroyMsg = \"\";\n      modifiedState.categoryDiscription = e.target.value;\n      this.setState(modifiedState);\n    };\n\n    this.componentDidMount = () => {\n      this.getLatestCategoryInfo();\n    };\n\n    this.getLatestCategoryInfo = (inModifiedState = null) => {\n      let modifiedState;\n\n      if (inModifiedState == null) {\n        modifiedState = this.state;\n      } else {\n        modifiedState = inModifiedState;\n      }\n\n      axios.post(\"\".concat(getAPIHostURL(), \"/wclient/getCategoryInformation\")).then(response => {\n        if (response.data.code == 'SUCCESS') {\n          if (response.data.retrivedCategoriesDetails == null || response.data.retrivedCategoriesDetails.length <= 0) {\n            console.log(\"No Category Data Found on server.\");\n            this.setState(modifiedState);\n            return;\n          } else {\n            let stateCategoryDetails = [];\n            stateCategoryDetails = [...modifiedState.data];\n            const receivedProductDataArr = response.data.retrivedCategoriesDetails;\n            let editIcon = React.createElement(FaEdit, {\n              className: \"viewAndEditIcon\",\n              title: \"Edit\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 178\n              },\n              __self: this\n            });\n            let deleteIcon = React.createElement(FaTrash, {\n              className: \"viewAndEditIcon\",\n              title: \"Delete\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 179\n              },\n              __self: this\n            });\n\n            for (let i = 0; i < receivedProductDataArr.length; i++) {\n              const CategoryDetails = receivedProductDataArr[i];\n              let singleCategoryDetails = {\n                delete: deleteIcon,\n                edit: editIcon,\n                categoryDiscription: CategoryDetails.Discription,\n                CategoryType: CategoryDetails.CategoryType,\n                CategoryID: CategoryDetails.CategoryID\n              };\n\n              if (modifiedState.formViewMode == \"insertMode\") {\n                for (let j = 0; j < stateCategoryDetails.length; j++) {\n                  if (stateCategoryDetails[j].CategoryID == singleCategoryDetails.CategoryID) {\n                    stateCategoryDetails.splice(j, 1);\n                  }\n                }\n\n                stateCategoryDetails.unshift(singleCategoryDetails);\n                modifiedState.selectedRowIndex = 0;\n                modifiedState.page = 0;\n              } else if (modifiedState.formViewMode == \"editMode\") {\n                for (let j = 0; j < stateCategoryDetails.length; j++) {\n                  if (stateCategoryDetails[j].CategoryID == singleCategoryDetails.CategoryID) {\n                    stateCategoryDetails.splice(j, 1);\n                  }\n                }\n\n                modifiedState.selectedRowIndex = 0;\n                modifiedState.page = 0;\n                stateCategoryDetails.unshift(singleCategoryDetails);\n              } else {\n                stateCategoryDetails.push(singleCategoryDetails);\n              }\n            }\n\n            modifiedState.data = stateCategoryDetails;\n          }\n        } else {\n          if (response.data.code == 'SQL_ERROR') {\n            // Tell the user that Server is experiencing errors\n            modifiedState.errors.others = 'Server experiencing issues.\\nTry again later.';\n          } else {\n            console.log('Should not reach here');\n            modifiedState.errors.others = 'Server experiencing issues.\\nTry again later.';\n          }\n        }\n\n        this.setState(modifiedState);\n      }).catch(error => {\n        console.log(error);\n        console.log(\"Network error:\");\n        modifiedState.errors.others = 'Network issues.\\nCheck your Internet and Try again later.';\n        this.setState(modifiedState);\n      });\n    };\n\n    this.toggle = () => {\n      this.setState(prevState => {\n        let modifiedState = prevState;\n        modifiedState.modal = !modifiedState.modal;\n        modifiedState.CategoryID = \"\";\n        modifiedState.enteredcategoryName = \"\";\n        modifiedState.formViewMode = \"insertMode\";\n        modifiedState.categoryDiscription = \"\";\n        return modifiedState;\n      });\n    };\n\n    this.closeModal = () => {\n      this.toggle();\n    };\n\n    this.oneditProductDetails = (rowInfo, column) => {\n      let modifiedState = this.state;\n      modifiedState.formViewMode = \"editMode\";\n      modifiedState.enteredcategoryName = rowInfo.original.CategoryType;\n      modifiedState.categoryDiscription = rowInfo.original.categoryDiscription;\n      modifiedState.CategoryID = rowInfo.original.CategoryID;\n      modifiedState.modal = true;\n      this.setState(modifiedState);\n    };\n\n    this.oncategoryCreationFormSubmit = event => {\n      event.preventDefault();\n      let modifiedState = this.state;\n      modifiedState.errors.others = \"\";\n      modifiedState.successfulAddedCategaroyMsg = \"\";\n      const allData = {\n        FormViewMode: modifiedState.formViewMode,\n        CategoryID: modifiedState.CategoryID,\n        categoryName: modifiedState.enteredcategoryName,\n        categoryDiscription: modifiedState.categoryDiscription\n      };\n      axios.post(\"\".concat(getAPIHostURL(), \"/wclient/saveCategoryInformation\"), allData).then(response => {\n        if (response.data.code == \"SUCCESS\") {\n          let alertMsg = modifiedState.formViewMode == 'deleteMode' ? 'Successfully Deleted Category.' : 'Successfully Created Category.';\n          alert(alertMsg);\n          modifiedState.modal = false;\n\n          if (modifiedState.formViewMode == 'deleteMode') {\n            for (let i = 0; i < modifiedState.data.length; i++) {\n              if (modifiedState.data[i]['CategoryID'] == modifiedState.CategoryID) {\n                modifiedState.data.splice(i, 1);\n              }\n            }\n\n            modifiedState.data = [...modifiedState.data];\n            this.setState(modifiedState);\n          } else {\n            this.getLatestCategoryInfo();\n          }\n        } else {\n          if (response.data.code == \"REQ_PARAMS_MISSING\") {\n            modifiedState.errors.others = \"Server experiencing issues.\\nTry again later.\";\n          } else if (response.data.code == \"SQL_ERROR\") {\n            modifiedState.errors.others = \"Server experiencing issues.\\nTry again later.\";\n          } else if (response.data.code == \"CATEGORY_NAME_ALREADY_EXIST\") {\n            modifiedState.errors.others = \"Category Type Already exist, please create new category.\";\n          } else {\n            modifiedState.successfulAddedCategaroyMsg = \"category created Successfully. For Creating Product, Click the Link below.\";\n          }\n        }\n\n        this.setState(modifiedState);\n      }).catch(error => {\n        console.log(error);\n        modifiedState.errors.others = 'Network issues.\\nCheck your Internet and Try again later.';\n        this.setState(modifiedState);\n      });\n    };\n\n    this.onPageChange = page => {\n      let modifiedState = this.state;\n      modifiedState.page = page;\n    };\n\n    this.onDeleteProductDetails = (rowInfo, column) => {\n      let modifiedState = this.state;\n      modifiedState.formViewMode = \"deleteMode\";\n      modifiedState.enteredcategoryName = rowInfo.original.CategoryType;\n      modifiedState.categoryDiscription = rowInfo.original.categoryDiscription;\n      modifiedState.CategoryID = rowInfo.original.CategoryID;\n      modifiedState.modal = true;\n      this.setState(modifiedState);\n    };\n\n    this.onChangecategoryName = e => {\n      let modifiedState = this.state;\n      modifiedState.errors.others = \"\";\n      modifiedState.successfulAddedCategaroyMsg = \"\";\n      modifiedState.enteredcategoryName = e.target.value;\n      this.setState(modifiedState);\n    };\n\n    this.state = {\n      modal: false,\n      backdrop: 'static',\n      enteredcategoryName: \"\",\n      categoryDiscription: \"\",\n      data: [],\n      formViewMode: '',\n      page: 0,\n      columns: [{\n        Header: () => React.createElement(\"div\", {\n          className: \"ProductTableHeader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, \"Selected\"),\n        accessor: \"\",\n        show: false,\n        Cell: rowInfo => {\n          return React.createElement(\"input\", {\n            type: \"radio\",\n            name: \"selectedRowIndicator\",\n            id: \"indicatingSelectedRow\",\n            className: \"selectedRadioBtn\",\n            checked: this.state.selectedRowIndex == rowInfo.index ? true : false,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30\n            },\n            __self: this\n          });\n        },\n        Filter: ({\n          filter,\n          onChange\n        }) => {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            style: {\n              display: \"none\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }));\n        },\n        style: {\n          textAlign: \"center\",\n          paddingLeft: \"1rem\"\n        }\n      }, {\n        Header: () => React.createElement(\"div\", {\n          className: \"ProductTableHeader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"Delete\"),\n        accessor: \"delete\",\n        style: {\n          textAlign: \"center\",\n          verticalAlign: \"middle\",\n          paddingLeft: \"1rem\"\n        },\n        getProps: (state, rowInfo, column) => {\n          return {\n            onClick: () => this.onDeleteProductDetails(rowInfo, column),\n            style: {\n              color: \"black\"\n            }\n          };\n        },\n        Filter: () => {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            style: {\n              display: \"none\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }));\n        },\n        Cell: props => React.createElement(\"span\", {\n          className: \"deviceNameCell\",\n          delete: props.original.delete,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, props.value)\n      }, {\n        Header: () => React.createElement(\"div\", {\n          className: \"ProductTableHeader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Edit\"),\n        accessor: \"edit\",\n        style: {\n          textAlign: \"center\",\n          verticalAlign: \"middle\",\n          paddingLeft: \"1rem\"\n        },\n        getProps: (state, rowInfo, column) => {\n          return {\n            onClick: () => this.oneditProductDetails(rowInfo, column),\n            style: {\n              color: \"black\"\n            }\n          };\n        },\n        Filter: () => {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }, React.createElement(\"input\", {\n            style: {\n              display: \"none\"\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }));\n        },\n        Cell: props => React.createElement(\"span\", {\n          className: \"deviceNameCell\",\n          edit: props.original.edit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, props.value)\n      }, {\n        Header: () => React.createElement(\"div\", {\n          className: \"ProductTableHeader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, \"Category ID\"),\n        accessor: 'CategoryID',\n        Filter: this.createProductDataFilter,\n        style: {\n          textAlign: \"left\",\n          paddingLeft: \"1rem\"\n        }\n      }, {\n        Header: () => React.createElement(\"div\", {\n          className: \"ProductTableHeader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        }, \"Category Name\"),\n        accessor: 'CategoryType',\n        Filter: this.createProductDataFilter,\n        style: {\n          textAlign: \"left\",\n          paddingLeft: \"1rem\"\n        }\n      }, {\n        Header: () => React.createElement(\"div\", {\n          className: \"ProductTableHeader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, \"Category Discription\"),\n        accessor: 'categoryDiscription',\n        Filter: this.createProductDataFilter,\n        style: {\n          textAlign: \"left\",\n          paddingLeft: \"1rem\"\n        }\n      }],\n      errors: {\n        others: ''\n      },\n      successfulAddedCategaroyMsg: ''\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          errors = _this$state.errors,\n          successfulAddedCategaroyMsg = _this$state.successfulAddedCategaroyMsg;\n    const color = {\n      color: \"var(--errorColor)\",\n      fontSize: \"13px\"\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        position: \"relative\",\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"ProductTableHeading\",\n      style: {\n        display: \"flex\",\n        marginRight: \"0.3rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355\n      },\n      __self: this\n    }, \"View All Categories Details\"), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        position: \"absolute\",\n        right: \"0rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn-md productScreenBut\",\n      onClick: this.toggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, \"Add New Category\"))), React.createElement(\"div\", {\n      style: {\n        borderStyle: \"solid\",\n        borderWidth: \"1px\",\n        margin: \"1rem\",\n        border: \"1px solid #a8cca8\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, React.createElement(ReactTable, {\n      data: this.state.data,\n      columns: this.state.columns,\n      defaultPageSize: 5,\n      filterable: true,\n      className: \"-striped -highlight\",\n      style: {\n        height: '70vh',\n        overflow: 'auto'\n      },\n      noDataText: \"No Category Data Found.\",\n      previousText: \"Previous\",\n      nextText: \"Next\",\n      getTrProps: this.getSelectedTrProps,\n      onPageChange: this.onPageChange,\n      page: this.state.page,\n      totalPage: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, \" \", React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384\n      },\n      __self: this\n    }, \"Go To Home Page\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      size: \"lg\",\n      isOpen: this.state.modal,\n      backdrop: this.state.backdrop,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    }, React.createElement(ModalHeader, {\n      toggle: this.toggle,\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388\n      },\n      __self: this\n    }, this.state.formViewMode == \"editMode\" ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390\n      },\n      __self: this\n    }, \"Edit selected Category Details \") : this.state.formViewMode == \"deleteMode\" ? React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, \"Delete Selected Category Details \") : React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    }, \"Add New Category Details \")), React.createElement(ModalBody, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container col-lg-11 col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-body addProductBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.oncategoryCreationFormSubmit,\n      style: {\n        pointerEvents: this.state.formViewMode == \"viewMode\" ? \"none\" : \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group addProductForm\",\n      style: this.state.formViewMode == \"insertMode\" ? {\n        display: \"none\"\n      } : {\n        display: \"block\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"addProductFormLabelWithRequiredFiled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, \"Category ID:\", React.createElement(\"span\", {\n      className: \"addProductRequiredMarkStar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"div\", {\n      className: \"addProductAndErr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"ProductID\",\n      className: \"AddProductForm\",\n      value: this.state.CategoryID,\n      noValidate: true,\n      readOnly: true,\n      style: {\n        color: \"#505050\",\n        backgroundColor: \"#F0F0F0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"form-group addProductForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"addProductFormLabelWithRequiredFiled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422\n      },\n      __self: this\n    }, \"Category Name:\", React.createElement(\"span\", {\n      className: \"addProductRequiredMarkStar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423\n      },\n      __self: this\n    }, \"*\")), React.createElement(\"div\", {\n      className: \"addProductAndErr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"ProductID\",\n      className: \"AddProductForm\",\n      value: this.state.enteredcategoryName,\n      noValidate: true,\n      onChange: this.onChangecategoryName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"form-group addProductForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"addProductFormLabelWithRequiredFiled\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437\n      },\n      __self: this\n    }, \"Category Description:\"), React.createElement(\"div\", {\n      className: \"addProductAndErr\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 439\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      name: \"CategoryDescription\",\n      className: \"AddProductForm\",\n      value: this.state.categoryDiscription,\n      noValidate: true,\n      onChange: this.onChangeCategoryDiscription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"space-evenly\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"productScreenBut\",\n      onClick: this.closeModal,\n      name: \"Back\",\n      style: {\n        pointerEvents: \"auto\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, \"Back\")), React.createElement(\"div\", {\n      style: {\n        display: \"\".concat(this.state.formViewMode == \"viewMode\" ? \"none\" : \"block\")\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"productScreenBut\",\n      name: \"Save\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }, this.state.formViewMode == \"deleteMode\" ? \"Delete\" : \"Save\"))), React.createElement(\"div\", {\n      className: \"buttonErrorMessage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462\n      },\n      __self: this\n    }, errors.others.length > 0 && React.createElement(\"p\", {\n      className: \"addProductErr\",\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }, errors.others)))))))))));\n  }\n\n}\n\nexport default AddCategory;","map":{"version":3,"sources":["C:\\Test\\clone 2\\DemoMachineTest\\democlient\\src\\Component\\JS\\AddCategory.js"],"names":["React","Component","axios","getAPIHostURL","Modal","ModalHeader","ModalBody","ReactTable","FaEdit","FaTrash","BrowserRouter","Router","Route","Link","AddCategory","constructor","props","onChangeCategoryDiscription","e","modifiedState","state","errors","others","successfulAddedCategaroyMsg","categoryDiscription","target","value","setState","componentDidMount","getLatestCategoryInfo","inModifiedState","post","then","response","data","code","retrivedCategoriesDetails","length","console","log","stateCategoryDetails","receivedProductDataArr","editIcon","deleteIcon","i","CategoryDetails","singleCategoryDetails","delete","edit","Discription","CategoryType","CategoryID","formViewMode","j","splice","unshift","selectedRowIndex","page","push","catch","error","toggle","prevState","modal","enteredcategoryName","closeModal","oneditProductDetails","rowInfo","column","original","oncategoryCreationFormSubmit","event","preventDefault","allData","FormViewMode","categoryName","alertMsg","alert","onPageChange","onDeleteProductDetails","onChangecategoryName","backdrop","columns","Header","accessor","show","Cell","index","Filter","filter","onChange","display","style","textAlign","paddingLeft","verticalAlign","getProps","onClick","color","createProductDataFilter","render","fontSize","position","justifyContent","marginRight","right","borderStyle","borderWidth","margin","border","height","overflow","getSelectedTrProps","pointerEvents","backgroundColor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../CSS/AddCategory.css';\nimport axios from 'axios';\nimport { getAPIHostURL } from '../../ClientConfig';\nimport { Modal, ModalHeader, ModalBody} from 'reactstrap';\nimport 'react-table/react-table.css';\nimport '../CSS/ProductPage.css';\nimport ReactTable from 'react-table';\nimport {FaEdit, FaTrash} from 'react-icons/fa';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nclass AddCategory extends Component {\n  constructor(props) {\n      super(props);\n      this.state = {\n        modal: false,\n        backdrop: 'static',\n        enteredcategoryName: \"\",\n        categoryDiscription: \"\",\n        data: [],\n        formViewMode: '',\n        page: 0,\n        columns: [\n            {       \n                Header:() => <div className=\"ProductTableHeader\">Selected</div>,  \n                accessor: \"\",\n                show: false,\n                Cell: ( rowInfo ) => {\n                    return (\n                        <input\n                            type = \"radio\"\n                            name = \"selectedRowIndicator\"\n                            id = \"indicatingSelectedRow\"\n                            className = \"selectedRadioBtn\"\n                            checked={this.state.selectedRowIndex == rowInfo.index ? true : false }\n                        />\n                    );\n                },\n                Filter:({filter, onChange}) => {\n                    return(\n                        <div>\n                            <input style={{ display:\"none\"}} />\n                        </div>\n                    )\n                },\n                style:({\n                    textAlign: \"center\",\n                    paddingLeft: \"1rem\"\n    \n                }),\n            },\n            {   \n                Header:() => <div className=\"ProductTableHeader\">Delete</div>, \n                accessor: \"delete\",\n                style:({\n                    textAlign: \"center\",\n                    verticalAlign: \"middle\",\n                    paddingLeft: \"1rem\"\n    \n                }),\n                getProps: (state, rowInfo, column) => {\n                    return {\n                        onClick: () => this.onDeleteProductDetails(rowInfo, column),\n                        style: {\n                            color: \"black\",\n                        },\n                    };\n                },\n                Filter:() => {\n                    return(\n                        <div>\n                            <input style={{ display:\"none\"}} />\n                        </div>\n                    )\n                },\n                Cell:  props => <span className='deviceNameCell' delete={props.original.delete}>{props.value}</span>\n            },\n            {   \n                Header:() => <div className=\"ProductTableHeader\">Edit</div>, \n                accessor: \"edit\",\n                style:({\n                    textAlign: \"center\",\n                    verticalAlign: \"middle\",\n                    paddingLeft: \"1rem\"\n    \n                }),\n                getProps: (state, rowInfo, column) => {\n                    return {\n                        onClick: () => this.oneditProductDetails(rowInfo, column),\n                        style: {\n                            color: \"black\",\n                        },\n                    };\n                },\n                Filter:() => {\n                    return(\n                        <div>\n                            <input style={{ display:\"none\"}} />\n                        </div>\n                    )\n                },\n                Cell:  props => <span className='deviceNameCell' edit={props.original.edit}>{props.value}</span>\n            },\n            {       \n                Header:() => <div className=\"ProductTableHeader\">Category ID</div>,  \n                accessor: 'CategoryID',\n                Filter: this.createProductDataFilter,\n                style:({\n                    textAlign:\"left\",\n                    paddingLeft: \"1rem\"\n                }),\n            },  \n            {       \n              Header:() => <div className=\"ProductTableHeader\">Category Name</div>,  \n              accessor: 'CategoryType',\n              Filter: this.createProductDataFilter,\n              style:({\n                  textAlign:\"left\",\n                  paddingLeft: \"1rem\",\n\n              }),\n            }, \n            {       \n              Header:() => <div className=\"ProductTableHeader\">Category Discription</div>,  \n              accessor: 'categoryDiscription',\n              Filter: this.createProductDataFilter,\n              style:({\n                  textAlign:\"left\",\n                  paddingLeft: \"1rem\",\n\n              }),\n          },                     \n        ],     \n\n        errors: { \n          others:''\n        },\n        successfulAddedCategaroyMsg: '',\n      };\n    } \n\n  onChangeCategoryDiscription = (e) => {\n    let modifiedState = this.state;\n    modifiedState.errors.others = \"\";\n    modifiedState.successfulAddedCategaroyMsg = \"\";\n    modifiedState.categoryDiscription = e.target.value;\n    this.setState(modifiedState);\n  }\n\n  componentDidMount = () => {\n    this.getLatestCategoryInfo();\n  }\n\n  getLatestCategoryInfo = (inModifiedState = null) => {\n        \n    let modifiedState;\n    if(inModifiedState == null) {\n        modifiedState = this.state;\n    } else {\n        modifiedState = inModifiedState;\n    }\n\n    axios.post(`${getAPIHostURL()}/wclient/getCategoryInformation`)\n    .then(response => {\n        \n        if(response.data.code == 'SUCCESS') {   \n            \n            if(response.data.retrivedCategoriesDetails == null || response.data.retrivedCategoriesDetails.length <= 0){\n                console.log(\"No Category Data Found on server.\")\n                this.setState(modifiedState);\n                return\n            } else {\n                let stateCategoryDetails = [];\n\n                stateCategoryDetails = [...modifiedState.data]\n\n                const receivedProductDataArr = response.data.retrivedCategoriesDetails;\n                let editIcon = <FaEdit className=\"viewAndEditIcon\" title=\"Edit\"/>\n                let deleteIcon = <FaTrash className=\"viewAndEditIcon\" title=\"Delete\"/>\n\n                for(let i = 0; i < receivedProductDataArr.length; i++) {\n                    const CategoryDetails = receivedProductDataArr[i];\n                    let singleCategoryDetails = {\n                        delete: deleteIcon,\n                        edit: editIcon,\n                        categoryDiscription: CategoryDetails.Discription,\n                        CategoryType: CategoryDetails.CategoryType,\n                        CategoryID: CategoryDetails.CategoryID,\n                    };\n\n\n                    if(modifiedState.formViewMode == \"insertMode\"){\n                        for(let j = 0; j < stateCategoryDetails.length; j++){\n                            if(stateCategoryDetails[j].CategoryID == singleCategoryDetails.CategoryID){\n                                stateCategoryDetails.splice(j, 1);\n                            }\n                        }\n                        stateCategoryDetails.unshift(singleCategoryDetails);\n                        modifiedState.selectedRowIndex = 0;\n                        modifiedState.page = 0;\n                    } else if(modifiedState.formViewMode == \"editMode\"){\n                        for(let j = 0; j < stateCategoryDetails.length; j++){\n                            if(stateCategoryDetails[j].CategoryID == singleCategoryDetails.CategoryID){\n                                stateCategoryDetails.splice(j, 1);\n                            }\n                        }\n                        modifiedState.selectedRowIndex = 0;\n                        modifiedState.page = 0;\n                        stateCategoryDetails.unshift(singleCategoryDetails);\n                    } else { \n                        stateCategoryDetails.push(singleCategoryDetails);\n                    }\n                } \n                modifiedState.data = stateCategoryDetails;\n            }\n        } else {\n            if(response.data.code == 'SQL_ERROR') {\n                // Tell the user that Server is experiencing errors\n                modifiedState.errors.others = 'Server experiencing issues.\\nTry again later.';\n            } else {\n                console.log('Should not reach here');\n                modifiedState.errors.others = 'Server experiencing issues.\\nTry again later.';\n            }\n        }\n        this.setState(modifiedState);\n    })\n    .catch(error => {\n        console.log(error);\n        console.log(\"Network error:\");\n        modifiedState.errors.others = 'Network issues.\\nCheck your Internet and Try again later.';\n        this.setState(modifiedState);\n    })\n  }\n\n  toggle = () => {\n    this.setState(prevState => {\n        let modifiedState = prevState;\n        modifiedState.modal = !modifiedState.modal\n        modifiedState.CategoryID = \"\";\n        modifiedState.enteredcategoryName = \"\";\n        modifiedState.formViewMode = \"insertMode\";\n        modifiedState.categoryDiscription = \"\";\n\n        return modifiedState\n    });\n  }\n\n  closeModal = () => {\n      this.toggle();\n  }\n\n  oneditProductDetails = (rowInfo, column) => {\n    let modifiedState = this.state;\n    modifiedState.formViewMode = \"editMode\";\n\n    modifiedState.enteredcategoryName = rowInfo.original.CategoryType;\n    modifiedState.categoryDiscription = rowInfo.original.categoryDiscription;\n    modifiedState.CategoryID = rowInfo.original.CategoryID\n\n    modifiedState.modal = true;\n    this.setState(modifiedState);\n  }\n\n  oncategoryCreationFormSubmit = (event) => {\n    event.preventDefault();\n\n    let modifiedState = this.state;\n    modifiedState.errors.others = \"\";\n    modifiedState.successfulAddedCategaroyMsg = \"\";\n\n    const allData = {\n      FormViewMode: modifiedState.formViewMode,\n      CategoryID: modifiedState.CategoryID,\n      categoryName: modifiedState.enteredcategoryName, \n      categoryDiscription: modifiedState.categoryDiscription\n    };\n\n      axios.post(`${getAPIHostURL()}/wclient/saveCategoryInformation`, allData)\n      .then(response => {\n        if(response.data.code == \"SUCCESS\") {\n          let alertMsg = modifiedState.formViewMode == 'deleteMode' ? 'Successfully Deleted Category.' : 'Successfully Created Category.'\n          alert(alertMsg);\n\n          modifiedState.modal = false;\n          if(modifiedState.formViewMode == 'deleteMode'){\n              for(let i=0; i< modifiedState.data.length; i++) {\n                if(modifiedState.data[i]['CategoryID'] == modifiedState.CategoryID){\n                    modifiedState.data.splice(i,1)\n                }\n              }\n            modifiedState.data = [...modifiedState.data];\n            this.setState(modifiedState);\n          } else {\n            this.getLatestCategoryInfo();\n          }\n        } else {\n\n          if (response.data.code == \"REQ_PARAMS_MISSING\") {\n            modifiedState.errors.others = \"Server experiencing issues.\\nTry again later.\";\n          } else if(response.data.code == \"SQL_ERROR\"){\n            modifiedState.errors.others = \"Server experiencing issues.\\nTry again later.\";\n          } else if(response.data.code == \"CATEGORY_NAME_ALREADY_EXIST\"){\n            modifiedState.errors.others = \"Category Type Already exist, please create new category.\";\n          } else{\n            modifiedState.successfulAddedCategaroyMsg = \"category created Successfully. For Creating Product, Click the Link below.\";\n          }\n        }\n        this.setState(modifiedState);\n      })\n      .catch(error => {\n        console.log(error);\n        modifiedState.errors.others = 'Network issues.\\nCheck your Internet and Try again later.';\n        this.setState(modifiedState);  \n      });\n  }\n\n  onPageChange = (page) => {\n    let modifiedState = this.state;\n    modifiedState.page = page;\n  }\n\n  onDeleteProductDetails = (rowInfo, column) => {\n\n    let modifiedState = this.state;\n    modifiedState.formViewMode = \"deleteMode\";\n\n    modifiedState.enteredcategoryName = rowInfo.original.CategoryType;\n    modifiedState.categoryDiscription = rowInfo.original.categoryDiscription;\n    modifiedState.CategoryID = rowInfo.original.CategoryID\n\n    modifiedState.modal = true;\n    this.setState(modifiedState);\n\n  }\n\n  onChangecategoryName = (e) => {\n    let modifiedState = this.state;\n    modifiedState.errors.others = \"\";\n    modifiedState.successfulAddedCategaroyMsg = \"\";\n    modifiedState.enteredcategoryName = e.target.value;\n    this.setState(modifiedState);\n  }\n\n  render() {\n      const{errors, successfulAddedCategaroyMsg}=this.state;\n\n      const color = {\n          color : \"var(--errorColor)\",\n          fontSize:\"13px\"\n      }\n\n      return (\n          <div>\n              <div style = {{position: \"relative\", display: \"flex\", justifyContent: \"center\"}}>\n                  <div className = \"ProductTableHeading\"  style={{display: \"flex\", marginRight: \"0.3rem\"}}>\n                      View All Categories Details\n                  </div> \n                      <div style={{display: \"flex\", position: \"absolute\", right: \"0rem\"}}>\n                          <button type = \"button\" \n                              className = \"btn-md productScreenBut\" \n                              onClick = {this.toggle}>Add New Category\n                          </button>  \n                      </div>\n              </div>\n\n              <div style={{borderStyle: \"solid\", borderWidth: \"1px\", margin:\"1rem\", border: \"1px solid #a8cca8\"}}>\n                  <ReactTable\n                      data = {this.state.data}\n                      columns = {this.state.columns}\n                      defaultPageSize = {5}\n                      filterable\n                      className = \"-striped -highlight\" \n                      style = {{height:'70vh', overflow:'auto'}}  \n                      noDataText = \"No Category Data Found.\"  \n                      previousText = \"Previous\"\n                      nextText = \"Next\"\n                      getTrProps = {this.getSelectedTrProps}\n                      onPageChange = {this.onPageChange}\n                      page={this.state.page}\n                      totalPage={10}\n                  />\n              </div>\n\n              <div> <Link to =\"/\">Go To Home Page</Link></div>\n\n              <div>\n                  <Modal size=\"lg\" isOpen={this.state.modal} backdrop={this.state.backdrop}>\n                      <ModalHeader toggle={this.toggle} style={{textAlign: \"center\"}}>\n                          {this.state.formViewMode == \"editMode\" \n                          ? <span>Edit selected Category Details </span> \n                          : this.state.formViewMode == \"deleteMode\" \n                          ? <span>Delete Selected Category Details </span> \n                          : <span>Add New Category Details </span>}\n                      </ModalHeader>\n                      <ModalBody>  \n                          <div className=\"container-fluid\">\n                              <div className=\"row justify-content-center\">\n                                  <div className=\"container col-lg-11 col-md-12\">\n                                      <div className=\"modal-body addProductBox\">\n                                          <form onSubmit={this.oncategoryCreationFormSubmit} \n                                              style={{pointerEvents: this.state.formViewMode == \"viewMode\" ? \"none\" : \"auto\"}} \n                                          >\n                                              <div className=\"form-group addProductForm\" \n                                                  style={this.state.formViewMode == \"insertMode\" ? {display: \"none\"} : {display: \"block\"}}\n                                              >\n                                                  <div className=\"input-group\">\n                                                      <label className=\"addProductFormLabelWithRequiredFiled\">Category ID:\n                                                          <span className=\"addProductRequiredMarkStar\">*</span>\n                                                      </label>\n                                                      <div className=\"addProductAndErr\">\n                                                          <input type='text' name='ProductID' className=\"AddProductForm\"  \n                                                              value={this.state.CategoryID} noValidate  readOnly = {true}\n                                                              style={{color: \"#505050\", backgroundColor: \"#F0F0F0\"}}\n                                                          />  \n                                                      </div>\n                                                  </div>\n                                              </div>\n\n                                              <div className=\"form-group addProductForm\" \n                                              >\n                                                  <div className=\"input-group\">\n                                                      <label className=\"addProductFormLabelWithRequiredFiled\">Category Name:\n                                                          <span className=\"addProductRequiredMarkStar\">*</span>\n                                                      </label>\n                                                      <div className=\"addProductAndErr\">\n                                                          <input type='text' name='ProductID' className=\"AddProductForm\"  \n                                                              value={this.state.enteredcategoryName} noValidate \n                                                              onChange={this.onChangecategoryName}\n                                                          />  \n                                                      </div>\n                                                  </div>\n                                              </div>\n\n                                              <div className=\"form-group addProductForm\" \n                                              >\n                                                  <div className=\"input-group\">\n                                                      <label className=\"addProductFormLabelWithRequiredFiled\">Category Description:\n                                                      </label>\n                                                      <div className=\"addProductAndErr\">\n                                                          <input type='text' name='CategoryDescription' className=\"AddProductForm\"  \n                                                              value={this.state.categoryDiscription} noValidate\n                                                              onChange={this.onChangeCategoryDiscription}\n                                                          />  \n                                                      </div>\n                                                  </div>\n                                              </div>\n\n                                              <div style={{display: \"flex\", justifyContent: \"space-evenly\"}}>\n                                                  <div>\n                                                      <button type=\"button\" className=\"productScreenBut\" \n                                                          onClick={this.closeModal} name=\"Back\" \n                                                          style={{pointerEvents: \"auto\"}}\n                                                      > \n                                                      Back</button>\n                                                  </div >\n                                                  <div style={{ display: `${this.state.formViewMode == \"viewMode\" ? \"none\" : \"block\"}` }}>\n                                                      <button type=\"submit\" className=\"productScreenBut\"  name=\"Save\">\n                                                          {this.state.formViewMode == \"deleteMode\" ? \"Delete\" : \"Save\"}\n                                                      </button>\n                                                  </div>\n                                              </div>\n                                              <div className = \"buttonErrorMessage\">\n                                                  {errors.others.length > 0 && \n                                                      <p  className='addProductErr' style={{textAlign: \"center\"}}>{errors.others}</p>}\n                                              </div>\n                                          </form>\n                                      </div>\n                                  </div>\n                              </div>\n                          </div>\n                      </ModalBody>\n                  </Modal>\n              </div>\n          </div>\n      )        \n  }\n}\nexport default AddCategory;\n\n\n"]},"metadata":{},"sourceType":"module"}